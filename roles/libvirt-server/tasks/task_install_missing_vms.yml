---
# inspired by https://github.com/sfromm/ansible-playbooks/
# inspired by https://github.com/pin/debian-vm-install/

- name: prepare missing installation resources (folder)
  file: path=/tmp/{{ item }} state=directory
  with_items:
    - "{{ vm_definitions_presence.results | json_query('[?skipped].item.os_variant') | unique }}"

- name: prepare missing installation resources (templates)
  vars:
    templates:
      - src: postinst.sh.j2
        dst: postinst.sh
      - src: preseed.cfg.j2
        dst: preseed.cfg
  template: src="{{ item[0] }}/{{ item[1].src }}" dest="/tmp/{{ item[0] }}/{{ item[1].dst }}"
  with_nested:
    - "{{ vm_definitions_presence.results | json_query('[?skipped].item.os_variant') | unique }}"
    - "{{ templates }}"

- name: prepare missing debian9 installation resources (copies)
  vars:
    files:
      # TODO the following should be configurable
      - src: /home/cfuchs/.ssh/id_rsa.pub
        dst: authorized_keys
  copy: src="{{ item[1].src }}" dest="/tmp/{{ item[0] }}/{{ item[1].dst }}"
  with_nested:
    - "{{ vm_definitions_presence.results | json_query('[?skipped].item.os_variant') | unique }}"
    - "{{ files }}"

- name: create missing debian9 vms
  # TODO get rid of the literal localnet7 below
  command: virt-install
           --virt-type kvm
           -n "{{ item.vm_name }}"
           -r "{{ item.ram_in_MB }}"
           --vcpus="{{ item.vcpus }}"
           --cpu qemu64,-svm
           -l "{{ installer_location[item.os_variant] }}"
           --initrd-inject="/tmp/{{ item.os_variant }}/preseed.cfg"
           --initrd-inject="/tmp/{{ item.os_variant }}/postinst.sh"
           --initrd-inject="/tmp/{{ item.os_variant }}/authorized_keys"
           --disk vol="{{ item.volumes[0].pool }}/{{ item.volumes[0].name }},bus=virtio"
           -w network=localnet7,mac="{{ item.mac }}",model=virtio
           --os-type "{{ item.os_type }}"
           --os-variant "{{ item.os_variant }}"
           --controller usb,model=none
           --graphics none
           --extra-args "auto=true hostname={{ item.hostname }} domain={{ network_mappings[item.network_label].domain }} console=ttyS0"
           --noautoconsole
           --wait=-1
  with_items:
    - "{{ vm_definitions_presence.results | json_query('[?skipped].item') }}"
  when: (item.os_variant == "debian9")

# TODO if possible, install VMs public ssh host key locally (so ansible work on them)
...
