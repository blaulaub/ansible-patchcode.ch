---
# file: virt-guests.yml
#
# status: under development
#
# inspired by https://github.com/sfromm/ansible-playbooks/


- hosts: libvirt_servers
  remote_user: ansible-agent
  become: true

  tasks:

    - name: ensure libvirt and python tools are installed
      package: name="{{ item }}" state=present
      with_items:
        - python-libvirt
        - python-lxml

    - name: ensure libvirt daemon is running
      service:
        name: libvirtd
        state: started
        enabled: yes

    - name: get list of virtual networks
      virt_net: command=facts
      register: virt_net_facts

    # TODO: define missing nets

    # TODO: check and fix net modifications

    - name: get list of volume pools and volumes
      virt_pool: command=facts
      register: virt_pool_facts

    # TODO: define missing pools

    # TODO: check and fix pool modifications

    - name: get list of vms
      virt: command=list_vms
      register: virt_vms

    - name: create missing volumes
      command: virsh vol-create-as "{{ item.1.pool }}" "{{ item.1.name }}" "{{ item.1.size_in_MB }}"M --format qcow2
      with_subelements:
        - "{{ vms }}"
        - volumes
      when: (inventory_hostname == item.0.libvirt_host) and (item.1.name not in virt_pool_facts.ansible_facts.ansible_libvirt_pools[item.1.pool].volumes)

    - name: update list of volume pools and volumes
      virt_pool: command=facts
      register: virt_pool_facts

    - name: report error on missing volumes
      fail: "It seems that host {{ item.0.libvirt_host }} pool {{ item.1.pool }} volume {{ item.1.name}} is missing"
      with_subelements:
        - "{{ vms }}"
        - volumes
      when: (inventory_hostname == item.0.libvirt_host) and (item.1.name not in virt_pool_facts.ansible_facts.ansible_libvirt_pools[item.1.pool].volumes)

    # TODO: the following two copy tasks could be nested
    # TODO: the following copy tasks should be executed once per host (when necessary), not once per missing guest

    - name: prepare missing debian9 installation resources
      copy: src=roles/common/files/debian9/ dest=/tmp/debian9/
      with_items:
        - "{{ vms }}"
      when: (inventory_hostname == item.libvirt_host) and (item.vm_name not in virt_vms.list_vms) and (item.os_variant == "debian9")

    - name: provide public ssh key for installation target
      copy: src=/home/cfuchs/.ssh/id_rsa.pub dest=/tmp/debian9/authorized_keys
      with_items:
        - "{{ vms }}"
      when: (inventory_hostname == item.libvirt_host) and (item.vm_name not in virt_vms.list_vms) and (item.os_variant == "debian9")
      
    - name: create missing debian9 vms
      command: virt-install
               --virt-type kvm
               -n "{{ item.vm_name }}"
               -r "{{ item.ram_in_MB }}"
               --vcpus="{{ item.vcpus }}"
               --cpu qemu64,-svm
               -l "{{ installer_location[item.os_variant] }}"
               --initrd-inject=/tmp/debian9/preseed.cfg
               --initrd-inject=/tmp/debian9/authorized_keys
               --disk vol="{{ item.volumes[0].pool }}/{{ item.volumes[0].name }},bus=virtio"
               -w network=localnet7,mac="{{ item.mac }}",model=virtio
               --os-type "{{ item.os_type }}"
               --os-variant "{{ item.os_variant }}"
               --controller usb,model=none
               --graphics none
               --extra-args "auto=true hostname={{ item.hostname }} domain={{ item.network }} console=ttyS0"
               --noautoconsole
               --wait=-1
      with_items:
        - "{{ vms }}"
      when: (inventory_hostname == item.libvirt_host) and (item.vm_name not in virt_vms.list_vms) and (item.os_variant == "debian9")

    # TODO? now the installation runs, and eventually finishes or fails. how do we know?

    # TODO switch ansible-agent from password to ssh key

    # TODO prepare swap partition

    # TODO include swap partition

...
